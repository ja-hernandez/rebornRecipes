name: Build and Deploy to linode

on:
  workflow_dispatch:

jobs:
  build:
    name: Build step
    runs-on: ubuntu-latest
    env:
      SPOONACULAR_API_KEY: ${{ secrets.SPOONACULAR_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '3.1.x'
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: double checking pwd
        run: ls ${{ github.workspace }}
      - name: var sub in angular src
        run: |
         sed -i "s/\[secret\]/$SPOONACULAR_API_KEY/g" './rebornRecipes/ClientApp/src/environments/environment.ts'
         sed -i "s/\[secret\]/$SPOONACULAR_API_KEY/g" './rebornRecipes/ClientApp/src/environments/environment.prod.ts'
         cat ./rebornRecipes/ClientApp/src/environments/environment.ts
      - name: Restore dependencies
        run: dotnet restore
      - name: Create Production Build
        run: dotnet publish -c Release --no-restore
      - name: var sub in .net publish
        uses: microsoft/variable-substitution@v1
        with:
          files: './rebornRecipes/bin/Release/netcoreapp3.1/publish/appsettings*.json'
        env:
          ConnectionStrings.ApplicationDbContext: ${{ secrets.APP_DB_CONTEXT }}
          IdentityServer.Key.Password: ${{ secrets.CERT_EXP_PW }}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
        
