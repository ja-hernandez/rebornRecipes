name: Build and Deploy to linode

on:
  workflow_dispatch:

jobs:
  build:
    name: Build step
    runs-on: ubuntu-latest
    env:
      SPOONACULAR_API_KEY: ${{ secrets.SPOONACULAR_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '3.1.x'
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: double checking pwd
        run: ls ${{ github.workspace }}
      - name: var sub in angular src
        run: |
         sed -i "s/\[secret\]/$SPOONACULAR_API_KEY/g" './rebornRecipes/ClientApp/src/environments/environment.ts'
         sed -i "s/\[secret\]/$SPOONACULAR_API_KEY/g" './rebornRecipes/ClientApp/src/environments/environment.prod.ts'
         cat ./rebornRecipes/ClientApp/src/environments/environment.ts
      - name: Restore dependencies
        run: dotnet restore
      - name: Create Production Build
        run: dotnet publish -c Release --no-restore
      - name: var sub in .net publish
        uses: microsoft/variable-substitution@v1
        with:
          files: './rebornRecipes/bin/Release/netcoreapp3.1/publish/appsettings*.json'
        env:
          ConnectionStrings.ApplicationDbContext: ${{ secrets.APP_DB_CONTEXT }}
          IdentityServer.Key.Password: ${{ secrets.CERT_EXP_PW }}
      - name: Install EF
        run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-ef
      - name: Add EF migration and generate script
        run: |
          cd ./rebornRecipes
          dotnet dotnet-ef migrations script -i -v -o "${{ github.workspace }}/dbscripts/Migrations.sql"
        env:
          ASPNETCORE_ENVIRONMENT: Production
      #- name: Push publish folder to Linode
       # run: |
        #  echo "$ssh_key" > ~/ssh_key
         # chmod 600 ~/ssh_key
          #rsync -e "ssh -i ~/ssh_key -o StrictHostKeyChecking=no" -avzO ./rebornRecipes/bin/Release/netcoreapp3.1/publish/ "$user"@"$host":/var/rebornRecipes/
        #env: 
         # ssh_key: ${{ secrets.CI_CERT }}
          #host: ${{ secrets.LINODE_DOMAIN }}
          #user: ${{ secrets.CD_USER }}
